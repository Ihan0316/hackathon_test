events { worker_connections 1024; }
http {
  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;
  sendfile      on;
 client_max_body_size 25m;


  upstream spring { server spring:8080; }
  upstream ai-chatbot { server ai-chatbot:8001; }
  upstream ai-vision { server ai-vision:8000; }

  server {
    listen 80;
    server_name _;

    location / {
      root   /usr/share/nginx/html;
      index  index.html;
      try_files $uri $uri/ /index.html;
    }

    location /api/ {
      proxy_pass http://spring/;
      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Route chat to chatbot service
    # - Exact /ai/chat -> /chat
    # - Any deeper path /ai/chat/* -> preserve remainder to chatbot (e.g., /ai/chat/animal/1 -> /animal/1)
    location = /ai/chat {
      proxy_pass http://ai-chatbot/chat;
    }
    location /ai/chat/ {
      proxy_pass http://ai-chatbot/chat/;
    }

    # Route all other /ai/* to vision service (animals, images, classify, etc.)
    location /ai/ {
      proxy_pass http://ai-vision/;
      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }
  }
}
